*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

html,
  body {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity, 1));
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  font-family:
      'Lato',
      ui-sans-serif,
      system-ui,
      -apple-system,
      'Segoe UI',
      Roboto,
      'Helvetica Neue',
      Arial,
      sans-serif;
}

.main-navigation a,
  .menu a {
  text-decoration-line: none;
}

.main-navigation a:hover,
  .menu a:hover {
  text-decoration-line: underline;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.logo-img {
  height: 5rem;
}

@media (min-width: 768px) {
  .logo-img {
    height: 7rem;
  }
}

.is-scrolled .logo-img {
  height: 3rem;
}

@media (min-width: 768px) {
  .is-scrolled .logo-img {
    height: 4rem;
  }
}

/* 3D outline button */

/* ===== Rooms ===== */

.rooms-row {
  display: flex;
  height: 100%;
  width: 100%;
}

.rooms-row .card {
  position: relative;
  flex: 1 1 0%;
  overflow: hidden;
  transition:
      flex-grow 400ms ease,
      transform 600ms ease;
}

.rooms-row .\!card {
  position: relative !important;
  flex: 1 1 0% !important;
  overflow: hidden !important;
  transition:
      flex-grow 400ms ease,
      transform 600ms ease !important;
}

/* Image zoom (only when not open) */

.rooms-row .bg-img {
  transition: transform 600ms ease;
}

.rooms-row:not(.has-open) .card:hover .bg-img {
  transform: scale(1.05);
}

.rooms-row:not(.has-open) .\!card:hover .bg-img {
  transform: scale(1.05) !important;
}

/* Flex distribution (only when not open) */

.rooms-row:not(.has-open):hover .card {
  flex-grow: 2;
}

.rooms-row:not(.has-open):hover .\!card {
  flex-grow: 2 !important;
}

.rooms-row:not(.has-open):hover .card:hover {
  flex-grow: 3;
}

.rooms-row:not(.has-open):hover .\!card:hover {
  flex-grow: 3 !important;
}

/* Overlay */

.rooms-row .shade {
  background: rgba(0, 0, 0, 0.5);
  transition: background 400ms ease;
}

.rooms-row:not(.has-open):hover .card:not(:hover) .shade {
  background: rgba(0, 0, 0, 0.75);
}

.rooms-row:not(.has-open):hover .\!card:not(:hover) .shade {
  background: rgba(0, 0, 0, 0.75) !important;
}

.rooms-row:not(.has-open):hover .card:hover .shade {
  background: rgba(0, 0, 0, 0.35);
}

.rooms-row:not(.has-open):hover .\!card:hover .shade {
  background: rgba(0, 0, 0, 0.35) !important;
}

/* Content wrapper (visible by default) */

.rooms-row .inner {
  opacity: 1;
  transform: translateY(0);
  visibility: visible;
  transition:
      opacity 600ms ease,
      transform 600ms ease,
      visibility 0s linear 0s;
}

/* Non-hovered hide (only when not open) */

.rooms-row:not(.has-open):hover .card:not(:hover) .inner {
  opacity: 0;
  transform: translateY(20px);
  visibility: hidden;
  transition:
      opacity 400ms ease,
      transform 400ms ease,
      visibility 0s linear 400ms;
}

.rooms-row:not(.has-open):hover .\!card:not(:hover) .inner {
  opacity: 0 !important;
  transform: translateY(20px) !important;
  visibility: hidden !important;
  transition:
      opacity 400ms ease,
      transform 400ms ease,
      visibility 0s linear 400ms !important;
}

/* Staggered children (only prep during hover, not open) */

.rooms-row .inner h3,
  .rooms-row .inner p,
  .rooms-row .inner a.cta {
  transition:
      opacity 600ms ease,
      transform 600ms ease;
}

.rooms-row:not(.has-open):hover .inner h3,
  .rooms-row:not(.has-open):hover .inner p,
  .rooms-row:not(.has-open):hover .inner a.cta {
  opacity: 0;
  transform: translateY(10px);
}

.rooms-row:not(.has-open):hover .card:hover .inner h3 {
  transition-delay: 150ms;
  opacity: 1;
  transform: translateY(0);
}

.rooms-row:not(.has-open):hover .\!card:hover .inner h3 {
  transition-delay: 150ms !important;
  opacity: 1 !important;
  transform: translateY(0) !important;
}

.rooms-row:not(.has-open):hover .card:hover .inner p {
  transition-delay: 300ms;
  opacity: 1;
  transform: translateY(0);
}

.rooms-row:not(.has-open):hover .\!card:hover .inner p {
  transition-delay: 300ms !important;
  opacity: 1 !important;
  transform: translateY(0) !important;
}

.rooms-row:not(.has-open):hover .card:hover .inner a.cta {
  transition-delay: 600ms;
  opacity: 1;
  transform: translateY(0);
}

.rooms-row:not(.has-open):hover .\!card:hover .inner a.cta {
  transition-delay: 600ms !important;
  opacity: 1 !important;
  transform: translateY(0) !important;
}

/* ===== Click-to-open state ===== */

.rooms-row.has-open .card {
  flex-basis: 0%;
  flex-grow: 0.0001;
}

.rooms-row.has-open .\!card {
  flex-basis: 0% !important;
  flex-grow: 0.0001 !important;
}

.rooms-row.has-open:hover .card {
  flex-grow: 0.0001;
}

.rooms-row.has-open:hover .\!card {
  flex-grow: 0.0001 !important;
}

/* disable hover growth */

.rooms-row.has-open .card:not(.is-open) .shade {
  background: rgba(0, 0, 0, 0.8);
}

.rooms-row.has-open .\!card:not(.is-open) .shade {
  background: rgba(0, 0, 0, 0.8) !important;
}

.rooms-row.has-open .card:not(.is-open) .inner {
  opacity: 0;
  transform: translateY(20px);
  visibility: hidden;
  transition:
      opacity 300ms ease,
      transform 300ms ease,
      visibility 0s linear 300ms;
}

.rooms-row.has-open .\!card:not(.is-open) .inner {
  opacity: 0 !important;
  transform: translateY(20px) !important;
  visibility: hidden !important;
  transition:
      opacity 300ms ease,
      transform 300ms ease,
      visibility 0s linear 300ms !important;
}

.rooms-row.has-open .card.is-open {
  flex-basis: 100%;
  flex-grow: 1;
}

.rooms-row.has-open .\!card.is-open {
  flex-basis: 100% !important;
  flex-grow: 1 !important;
}

.rooms-row.has-open .card.is-open .shade {
  background: rgba(0, 0, 0, 0.35);
  cursor: zoom-out;
}

.rooms-row.has-open .\!card.is-open .shade {
  background: rgba(0, 0, 0, 0.35) !important;
  cursor: zoom-out !important;
}

.rooms-row.has-open .card.is-open .inner {
  opacity: 1;
  transform: translateY(0);
  visibility: visible;
  transition:
      opacity 600ms ease,
      transform 600ms ease,
      visibility 0s linear 0s;
}

.rooms-row.has-open .\!card.is-open .inner {
  opacity: 1 !important;
  transform: translateY(0) !important;
  visibility: visible !important;
  transition:
      opacity 600ms ease,
      transform 600ms ease,
      visibility 0s linear 0s !important;
}

/* Stagger on open */

.rooms-row.has-open .card.is-open .inner h3 {
  transition-delay: 120ms;
  opacity: 1;
  transform: translateY(0);
}

.rooms-row.has-open .\!card.is-open .inner h3 {
  transition-delay: 120ms !important;
  opacity: 1 !important;
  transform: translateY(0) !important;
}

.rooms-row.has-open .card.is-open .inner p {
  transition-delay: 260ms;
  opacity: 1;
  transform: translateY(0);
}

.rooms-row.has-open .\!card.is-open .inner p {
  transition-delay: 260ms !important;
  opacity: 1 !important;
  transform: translateY(0) !important;
}

.rooms-row.has-open .card.is-open .inner a.cta {
  transition-delay: 520ms;
  opacity: 1;
  transform: translateY(0);
}

.rooms-row.has-open .\!card.is-open .inner a.cta {
  transition-delay: 520ms !important;
  opacity: 1 !important;
  transform: translateY(0) !important;
}

/* Close button */

.close-btn {
  position: absolute;
  top: 16px;
  right: 16px;
  z-index: 10;
  display: none;
  padding: 10px 12px;
  border: 1px solid rgba(255, 255, 255, 0.6);
  border-radius: 9999px;
  background: rgba(0, 0, 0, 0.45);
  color: #fff;
  font-size: 14px;
  line-height: 1;
  cursor: pointer;
  backdrop-filter: saturate(120%) blur(4px);
  transition:
      background 200ms ease,
      transform 200ms ease;
}

.close-btn:hover {
  transform: scale(1.04);
  background: rgba(0, 0, 0, 0.6);
}

.rooms-row.has-open .card.is-open .close-btn {
  display: inline-flex;
  align-items: center;
  gap: 8px;
}

.rooms-row.has-open .\!card.is-open .close-btn {
  display: inline-flex !important;
  align-items: center !important;
  gap: 8px !important;
}

/* Touch highlight fix */

.rooms-row,
  .rooms-row * {
  -webkit-tap-highlight-color: transparent;
}

/* Reduce motion */

@media (prefers-reduced-motion: reduce) {
  .rooms-row .card,
    .rooms-row .inner,
    .rooms-row .shade,
    .rooms-row .bg-img,
    .rooms-row .inner h3,
    .rooms-row .inner p,
    .rooms-row .inner a.cta,
    .close-btn {
    transition: none !important;
  }

  .rooms-row .\!card {
    transition: none !important;
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.pointer-events-none {
  pointer-events: none;
}

.visible {
  visibility: visible;
}

.invisible {
  visibility: hidden;
}

.collapse {
  visibility: collapse;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.inset-0 {
  inset: 0px;
}

.inset-x-0 {
  left: 0px;
  right: 0px;
}

.bottom-\[4\%\] {
  bottom: 4%;
}

.left-1\/2 {
  left: 50%;
}

.top-0 {
  top: 0px;
}

.z-10 {
  z-index: 10;
}

.z-20 {
  z-index: 20;
}

.z-50 {
  z-index: 50;
}

.mx-3 {
  margin-left: 0.75rem;
  margin-right: 0.75rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.ml-4 {
  margin-left: 1rem;
}

.mt-4 {
  margin-top: 1rem;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.table {
  display: table;
}

.grid {
  display: grid;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.h-16 {
  height: 4rem;
}

.h-20 {
  height: 5rem;
}

.h-auto {
  height: auto;
}

.h-full {
  height: 100%;
}

.h-screen {
  height: 100vh;
}

.w-\[160px\] {
  width: 160px;
}

.w-\[290px\] {
  width: 290px;
}

.w-full {
  width: 100%;
}

.max-w-7xl {
  max-width: 80rem;
}

.-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[-14\%\] {
  --tw-translate-x: -14%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[-8\%\] {
  --tw-translate-x: -8%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[4\%\] {
  --tw-translate-y: 4%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.gap-4 {
  gap: 1rem;
}

.gap-8 {
  gap: 2rem;
}

.space-y-12 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(3rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(3rem * var(--tw-space-y-reverse));
}

.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.divide-x > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}

.divide-white > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-divide-opacity, 1));
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.rounded {
  border-radius: 0.25rem;
}

.border {
  border-width: 1px;
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity, 1));
}

.bg-black\/70 {
  background-color: rgb(0 0 0 / 0.7);
}

.bg-opacity-40 {
  --tw-bg-opacity: 0.4;
}

.bg-cover {
  background-size: cover;
}

.bg-center {
  background-position: center;
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.p-4 {
  padding: 1rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.pb-12 {
  padding-bottom: 3rem;
}

.text-center {
  text-align: center;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-8xl {
  font-size: 6rem;
  line-height: 1;
}

.text-\[10px\] {
  font-size: 10px;
}

.text-\[12px\] {
  font-size: 12px;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-bold {
  font-weight: 700;
}

.font-light {
  font-weight: 300;
}

.font-thin {
  font-weight: 100;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

.leading-tight {
  line-height: 1.25;
}

.tracking-\[0\.30em\] {
  letter-spacing: 0.30em;
}

.tracking-wide {
  letter-spacing: 0.025em;
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.underline {
  text-decoration-line: underline;
}

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.opacity-40 {
  opacity: 0.4;
}

.opacity-80 {
  opacity: 0.8;
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.backdrop-blur {
  --tw-backdrop-blur: blur(8px);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.\[transform\:skew\(1deg\2c 25deg\)\] {
  transform: skew(1deg,25deg);
}

/* ===== Typography (fonts) ===== */

@font-face {
  font-family: 'Lato';

  font-style: normal;

  font-weight: 100;

  src: url('../fonts/lato/Lato-Thin.woff2') format('woff2');

  font-display: swap;
}

@font-face {
  font-family: 'Lato';

  font-style: normal;

  font-weight: 300;

  src: url('../fonts/lato/Lato-Light.woff2') format('woff2');

  font-display: swap;
}

.after\:absolute::after {
  content: var(--tw-content);
  position: absolute;
}

.after\:left-1\/2::after {
  content: var(--tw-content);
  left: 50%;
}

.after\:top-\[80\%\]::after {
  content: var(--tw-content);
  top: 80%;
}

.after\:h-\[calc\(100\%-64\%\)\]::after {
  content: var(--tw-content);
  height: calc(100% - 64%);
}

.after\:w-px::after {
  content: var(--tw-content);
  width: 1px;
}

.after\:-translate-x-1\/2::after {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.after\:bg-white::after {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.after\:content-\[\'\'\]::after {
  --tw-content: '';
  content: var(--tw-content);
}

.hover\:opacity-100:hover {
  opacity: 1;
}

@media (min-width: 640px) {
  .sm\:px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media (min-width: 768px) {
  .md\:flex {
    display: flex;
  }

  .md\:h-28 {
    height: 7rem;
  }
}

@media (min-width: 1024px) {
  .lg\:px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }
}
