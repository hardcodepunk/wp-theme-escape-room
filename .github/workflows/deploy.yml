name: Deploy theme to Let-Me-Out

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: deploy-theme
  cancel-in-progress: true

env:
  THEME_DIR: escape-room

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Build only if you actually have a package.json in the theme folder
      - name: Setup Node
        if: hashFiles(format('{0}/package.json', env.THEME_DIR)) != ''
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps (if package.json exists)
        if: hashFiles(format('{0}/package.json', env.THEME_DIR)) != ''
        run: |
          cd "$THEME_DIR"
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build assets (if package.json exists)
        if: hashFiles(format('{0}/package.json', env.THEME_DIR)) != ''
        run: |
          cd "$THEME_DIR"
          npm run build

      - name: Clean remote theme dir
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.SFTP_HOST }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          port: ${{ vars.SFTP_PORT }}
          script: |
            mkdir -p "${{ vars.SFTP_PATH }}"
            find "${{ vars.SFTP_PATH }}" -mindepth 1 -maxdepth 1 -exec rm -rf {} \;

      - name: Upload theme via SCP (over SSH)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.SFTP_HOST }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          port: ${{ vars.SFTP_PORT }}
          source: '${{ env.THEME_DIR }}/*'
          target: '${{ vars.SFTP_PATH }}'
          overwrite: true

      - name: Debug workspace
        run: |
          pwd
          ls -la
          echo "---- THEME ----"
          ls -la "${{ env.THEME_DIR }}" || true
